/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["resources_js_compare_kO_js"],{

/***/ "./resources/js/compare_kO.js":
/*!************************************!*\
  !*** ./resources/js/compare_kO.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nif ($(\"#compare_kO\").length != 0) var Compare_kO = new Vue({\n  el: '#compare_kO',\n  data: function data() {\n    return {\n      fields: [{\n        key: 'Name',\n        label: 'Molecule name',\n        sortable: true,\n        ID_Molecule: 'ID_Molecule'\n      }, {\n        key: 'Name_Radical',\n        label: 'Radical',\n        sortable: true\n      }, {\n        key: 'Name_Solvent',\n        label: 'Solvent',\n        sortable: true\n      }, {\n        key: 'Valor',\n        label: 'K Overall',\n        sortable: true,\n        variant: 'info'\n      }, {\n        key: 'pH',\n        label: 'pH',\n        sortable: true\n      }, {\n        key: 'Tipo',\n        label: 'Type',\n        sortable: true\n      }, {\n        key: 'Descripcion',\n        label: 'Description'\n      }, {\n        key: 'Relation',\n        label: 'Relation',\n        sortable: true,\n        variant: 'warning'\n      }, {\n        key: 'info',\n        label: 'info'\n      }],\n      isBusy: false,\n      totalRows: 1,\n      currentPage: 1,\n      filter: null,\n      filterOn: ['Valor'],\n      perPage: 15,\n      sortBy: '',\n      sortDesc: false,\n      Molecules: [],\n      ActSRad: [],\n      ActSolv: [],\n      Act_pH: [],\n      MolSelected: \"2\",\n      RadSelected: \"1\",\n      SolSelected: \"1\",\n      pH_Selected: \"7.4\",\n      TypSelected: \"All\",\n      sortDirection: 'asc',\n      items: [],\n      molToCompare: \"Trolox\",\n      IDK_OveralComparation: 14,\n      ValorCompare: 410000,\n      userMol: \"\",\n      userValue: 0\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n      var formData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // Set the initial number of items\n              _this.totalRows = _this.items.length;\n              formData = new FormData();\n              /*  Add the form data we need to submit */\n\n              formData.append('appeal', 'Molecules'); //peticion de datos\n\n              formData.append('IDSolvent', \"1\");\n              formData.append('IDRadical', \"1\");\n              formData.append('IDMolecule', \"2\");\n              formData.append('Type', \"\");\n              formData.append('pH', \"7.4\");\n              _context.next = 10;\n              return axios.post('/getCompareK_O', formData).then(function (response) {\n                _this.Molecules = response.data;\n              });\n\n            case 10:\n              formData[\"delete\"]('appeal');\n              formData.append('appeal', 'Radicals'); //peticion de datos\n\n              _context.next = 14;\n              return axios.post('/getCompareK_O', formData).then(function (response) {\n                _this.ActSRad = response.data;\n              });\n\n            case 14:\n              formData[\"delete\"]('appeal');\n              formData.append('appeal', 'Solvents'); //peticion de datos\n\n              _context.next = 18;\n              return axios.post('/getCompareK_O', formData).then(function (response) {\n                _this.ActSolv = response.data;\n              });\n\n            case 18:\n              formData[\"delete\"]('appeal');\n              formData.append('appeal', 'pH'); //peticion de datos\n\n              _context.next = 22;\n              return axios.post('/getCompareK_O', formData).then(function (response) {\n                _this.Act_pH = response.data;\n              });\n\n            case 22:\n              formData[\"delete\"]('appeal');\n              formData.append('appeal', 'Const'); //peticion de datos\n\n              _context.next = 26;\n              return axios.post('/getCompareK_O', formData).then(function (response) {\n                _this.items = response.data;\n                _this.molToCompare = _this.items[1];\n              });\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  computed: {},\n  methods: {\n    changeMol: function changeMol() {\n      var _this2 = this;\n\n      this.ActSRad = [];\n      this.ActSolv = [];\n      this.Act_pH = [];\n      this.items = [];\n      this.RadSelected = \"\";\n      this.SolSelected = \"\";\n      this.pH_Selected = \"\";\n      var formData = new FormData();\n      formData.append('pH', \"7.4\");\n      formData.append('IDMolecule', this.MolSelected);\n      formData.append('appeal', 'Radicals');\n      axios.post('/getCompareK_O', formData).then(function (response) {\n        _this2.ActSRad = response.data;\n      });\n    },\n    changeRad: function changeRad() {\n      var _this3 = this;\n\n      this.Act_pH = [];\n      this.ActSolv = [];\n      this.items = [];\n      this.SolSelected = \"\";\n      this.pH_Selected = \"\";\n      var formData = new FormData();\n      formData.append('IDMolecule', this.MolSelected);\n      formData.append('IDRadical', this.RadSelected);\n      formData.append('appeal', 'Solvents');\n      axios.post('/getCompareK_O', formData).then(function (response) {\n        _this3.ActSolv = response.data;\n      });\n    },\n    changeSol: function changeSol() {\n      var _this4 = this;\n\n      this.Act_pH = [];\n      this.items = [];\n      var formData = new FormData();\n      formData.append('IDMolecule', this.MolSelected);\n      formData.append('IDRadical', this.RadSelected);\n      formData.append('IDSolvent', this.SolSelected);\n      formData.append('appeal', 'pH'); //peticion de datos\n\n      axios.post('/getCompareK_O', formData).then(function (response) {\n        _this4.Act_pH = response.data;\n      });\n    },\n    changepH: function changepH() {\n      var _this5 = this;\n\n      this.items = [];\n      var formData = new FormData();\n      formData.append('IDMolecule', this.MolSelected);\n      formData.append('IDRadical', this.RadSelected);\n      formData.append('IDSolvent', this.SolSelected);\n      formData.append('Type', this.TypSelected);\n      if (this.pH_Selected != null) formData.append('pH', this.pH_Selected);else formData.append('pH', \"-1\");\n      formData.append('appeal', 'Const'); //peticion de datos\n\n      axios.post('/getCompareK_O', formData).then(function (response) {\n        _this5.items = response.data;\n      });\n    },\n    rowClass: function rowClass(item, type) {\n      if (!item || type !== 'row') return;\n      if (item.ID_K_OVERALL == this.IDK_OveralComparation) return 'table-warning';\n      if (item.ID_Molecule == this.MolSelected) return 'table-success';\n    },\n    RowClicked: function RowClicked(item, index, event) {\n      if (this.IDK_OveralComparation != item.ID_K_OVERALL) this.IDK_OveralComparation = item.ID_K_OVERALL;else this.IDK_OveralComparation = -1;\n      this.molToCompare = item;\n      this.ValorCompare = parseFloat(\" \" + item.Valor);\n      this.userMol = \"\";\n      this.userValue = 0;\n    },\n    onFiltered: function onFiltered(filteredItems) {\n      // Trigger pagination to update the number of buttons/pages due to filtering\n      this.totalRows = filteredItems.length;\n      this.currentPage = 1;\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/compare_kO.js\n");

/***/ })

}]);